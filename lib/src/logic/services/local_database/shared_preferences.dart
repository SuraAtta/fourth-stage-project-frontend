import 'package:flutter/cupertino.dart';import 'package:fourth_stage/src/logic/services/api/api_calls.dart';import 'package:get/get_state_manager/src/simple/get_controllers.dart';import 'package:get_storage/get_storage.dart';import 'package:shared_preferences/shared_preferences.dart';import 'package:sqflite/sqflite.dart' as sql;class Database2 extends GetxController {  static  GetStorage box = GetStorage();  static Future<void> initStorage() async {    print("create Storage done ");    await GetStorage.init();  }  static Future<void> initStorageFav() async {    print("create Storage done ");    SharedPreferences prefs = await SharedPreferences.getInstance();  }  static Future<void> createTables(sql.Database database) async {    await database.execute('CREATE TABLE favList(id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,prodectId INTEGER)');  }  static Future<sql.Database> db() async {    return sql.openDatabase(      'MyApp2.db',      version: 1,      onCreate: (sql.Database database, int version) async {        await createTables(database);      },    );  }// Create new item (pr)  static Future<int> createListItem( int pId) async {    final db = await Database2.db();    final data = {'prodectId': pId, };    final id = await db.insert('favList', data,        conflictAlgorithm: sql.ConflictAlgorithm.replace);    return id;  }  static Future<List<Map<String, dynamic>>> getItems() async {    final db = await Database2.db();    return db.query('favList', orderBy: "id");  }  // Update an item by id  static Future<int> updateItem(int id,int pId) async {    final db = await Database2.db();    final data = {      'prodectId': pId,    };    final result =    await db.update('favList', data, where: "id = ?", whereArgs: [id]);    return result;  }  // Delete Game  static Future<void> deleteItem(int id) async {    final db = await Database2.db();    try {      await db.delete("favList", where: "prodectId = ?", whereArgs: [id]);    } catch (err) {      debugPrint("Something went wrong when deleting an item: $err");    }  }}